{
    "version": "0.2.0",
    "configurations": [
      {
        "type": "bashdb",
        "request": "launch",
        "name": "Bash-Debug (hardcoded script name)",
        "cwd": "${workspaceFolder}",
        "program": "${workspaceFolder}/file_integrity_check.sh",
        "args": []
      },
      {
        "type": "bashdb",
        "request": "launch",
        "name": "Bash-Debug (select script from list of sh files)",
        "cwd": "${workspaceFolder}",
        "program": "${command:SelectScriptName}",
        "args": []
      },
      {
        "name": "Debug Build One Service Main File",
        "type": "cppdbg",
        "request": "launch",
        "program": "${workspaceFolder}/build/main_build/main", // Path to your built executable
        "args": [], // Optional: Add command-line arguments if needed
        "stopAtEntry": true, // Set to true if you want to stop at the program's entry point
        "cwd": "${workspaceFolder}", // Working directory
        "environment": [],
        "externalConsole": false, // Use the integrated terminal for I/O
        "MIMode": "gdb", // Use gdb as the debugger
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ],
        "preLaunchTask": "Build One Service Debug C Program" // Automatically build before starting debugging
      },
      {
        "name": "Debug Build Two Service Main File",
        "type": "cppdbg",
        "request": "launch",
        "program": "${workspaceFolder}/build/main_build/main", // Path to your built executable
        "args": [], // Optional: Add command-line arguments if needed
        "stopAtEntry": true, // Set to true if you want to stop at the program's entry point
        "cwd": "${workspaceFolder}", // Working directory
        "environment": [],
        "externalConsole": false, // Use the integrated terminal for I/O
        "MIMode": "gdb", // Use gdb as the debugger
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ],
        "preLaunchTask": "Build Two Service Debug C Program" // Automatically build before starting debugging
      },
      {
        "name": "Debug Build Two Service SPI File",
        "type": "cppdbg",
        "request": "launch",
        "program": "${workspaceFolder}/build/spi_build/spi", // Path to your built executable
        "args": [], // Optional: Add command-line arguments if needed
        "stopAtEntry": true, // Set to true if you want to stop at the program's entry point
        "cwd": "${workspaceFolder}", // Working directory
        "environment": [],
        "externalConsole": false, // Use the integrated terminal for I/O
        "MIMode": "gdb", // Use gdb as the debugger
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ],
        "preLaunchTask": "Build Two Service Debug C Program" // Automatically build before starting debugging
      }
    ]
  }